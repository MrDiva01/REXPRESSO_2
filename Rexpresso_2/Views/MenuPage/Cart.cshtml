@model List<Product>



<div class="cart-card">
    <h2>Shopping Cart</h2>

    <table>
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="cart-items">
            <!-- Cart items will be dynamically inserted here -->
        </tbody>
    </table>
    <p id="cart-total"></p>

    <div class="cart-buttons">
        <button onclick="goBack()">Back to Shop</button>
        <button onclick="openModal()">Place Order</button>
    </div>
</div>

<!-- Order Modal -->
<div id="orderModal" class="modal" style="display:none;">
    <div class="modal-content">
        <span onclick="closeModal()" class="close-button">&times;</span>
        <h2>Place Order</h2>
        <label for="paymentMethod">Payment Method:</label>
        <select id="paymentMethod">
            <option value="CreditCard">Credit Card</option>
            <option value="PayPal">PayPal</option>
            <option value="CashOnDelivery">Cash on Delivery</option>
        </select>
        <button onclick="placeOrder()">Submit</button>
    </div>
</div>

<script>
    function displayCartItems() {
        var cartTable = document.getElementById("cart-items");
        var total = 0;

        // Clear existing items
        cartTable.innerHTML = "";

        // Retrieve cart items from local storage
        var cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        // Loop through cart items and display each one
        cartItems.forEach(function (item, index) {
            var row = document.createElement("tr");
            var totalPrice = item.price * item.quantity;
            total += totalPrice;

            row.innerHTML = `
                    <td>${item.name}</td>
                    <td>$${item.price.toFixed(2)}</td>
                    <td>${item.quantity}</td>
                    <td>$${totalPrice.toFixed(2)}</td>
                    <td><button class="delete-button" onclick="deleteItem(${index})"><i class="fas fa-trash-alt"></i></button></td>
                `;

            cartTable.appendChild(row);
        });

        // Display total
        document.getElementById("cart-total").textContent = "Total: $" + total.toFixed(2);
    }

    function deleteItem(index) {
        // Retrieve cart items from local storage
        var cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        // Remove item from array
        cartItems.splice(index, 1);

        // Update local storage with modified cart items
        localStorage.setItem('cartItems', JSON.stringify(cartItems));

        // Re-display cart items
        displayCartItems();
    }

    function goBack() {
        window.location.href = "/MenuPage"; // Redirect back to the menu page
    }

    function openModal() {
        document.getElementById('orderModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('orderModal').style.display = 'none';
    }

    function placeOrder() {
        var paymentMethod = document.getElementById('paymentMethod').value;
        alert('Order successful! Payment Method: ' + paymentMethod);
        // Clear the cart
        localStorage.removeItem('cartItems');
        // Redirect to another page or refresh the cart
        window.location.href = "/orderConfirmation"; // Adjust the URL as needed
    }

    // Display cart items when the page loads
    displayCartItems();
</script>

<style>
    .cart-card {
        background-color: #ffffff;
        padding: 20px;
        margin: 20px auto;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 800px;
    }

        .cart-card h2 {
            text-align: center;
            margin-bottom: 20px;
        }

    .cart-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

        .cart-buttons button {
            padding: 10px 20px;
            cursor: pointer;
            border: none;
            background-color: #3c2a04;
            color: white;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

            .cart-buttons button:hover {
                background-color: #e6bb00;
            }

    .modal {
        display: flex;
        justify-content: center;
        align-items: center;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        max-width: 400px;
        width: 100%;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .close-button {
        float: right;
        font-size: 24px;
        cursor: pointer;
    }

        .close-button:hover {
            color: red;
        }
</style>
